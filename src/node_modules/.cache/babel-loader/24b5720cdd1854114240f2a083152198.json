{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\toms\\\\React WeatherApp\\\\weatherapp\\\\src\\\\WeatherAppTEST.js\";\nimport React from \"react\";\nimport Titles from \"./Components/titles\";\nimport Form from \"./Components/form\";\nimport Weather from \"./Components/weather\";\nconst API_KEY = \"d798f5a297dd3b2e788deb6074ca3429\";\n\nclass WeatherApp extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temperature: undefined,\n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      description: undefined,\n      error: undefined\n    };\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n      const country = e.target.elements.country.value;\n      const apiCall = await fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \",\").concat(country, \"&appid=\").concat(API_KEY));\n      const data = await apiCall.json();\n\n      if (city && country) {\n        this.setState({\n          temperature: data.main.temp,\n          city: data.name,\n          country: data.sys.country,\n          humidity: data.main.humidity,\n          description: data.weather[0].description,\n          error: \"\"\n        });\n      } else {\n        this.setState({\n          temperature: undefined,\n          city: undefined,\n          country: undefined,\n          humidity: undefined,\n          description: undefined,\n          error: \"Invalid entry.  Please check city and country.\"\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      classname: \"sdsdtitle-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Titles, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      classname: \".col-xl-7 form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Form, {\n      getWeather: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      temperature: this.state.temperature,\n      city: this.state.city,\n      country: this.state.country,\n      humidity: this.state.humidity,\n      description: this.state.description,\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\n;\nexport default WeatherApp;","map":{"version":3,"sources":["C:\\Users\\toms\\React WeatherApp\\weatherapp\\src\\WeatherAppTEST.js"],"names":["React","Titles","Form","Weather","API_KEY","WeatherApp","Component","state","temperature","undefined","city","country","humidity","description","error","getWeather","e","preventDefault","target","elements","value","apiCall","fetch","data","json","setState","main","temp","name","sys","weather","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,MAAMC,OAAO,GAAG,kCAAhB;;AAGA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACJC,MAAAA,WAAW,EAAEC,SADT;AAEJC,MAAAA,IAAI,EAAED,SAFF;AAGJE,MAAAA,OAAO,EAAEF,SAHL;AAIJG,MAAAA,QAAQ,EAAEH,SAJN;AAKJI,MAAAA,WAAW,EAAEJ,SALT;AAMJK,MAAAA,KAAK,EAAEL;AANH,KAD6B;;AAAA,SASrCM,UATqC,GASxB,MAAOC,CAAP,IAAa;AACtBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMP,IAAI,GAAGM,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBT,IAAlB,CAAuBU,KAApC;AACA,YAAMT,OAAO,GAAGK,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBR,OAAlB,CAA0BS,KAA1C;AACA,YAAMC,OAAO,GAAG,MAAMC,KAAK,4DAAqDZ,IAArD,cAA6DC,OAA7D,oBAA8EP,OAA9E,EAA3B;AACA,YAAMmB,IAAI,GAAG,MAAMF,OAAO,CAACG,IAAR,EAAnB;;AAEA,UAAKd,IAAI,IAAKC,OAAd,EAAwB;AACxB,aAAKc,QAAL,CAAc;AACVjB,UAAAA,WAAW,EAAEe,IAAI,CAACG,IAAL,CAAUC,IADb;AAEVjB,UAAAA,IAAI,EAAEa,IAAI,CAACK,IAFD;AAGVjB,UAAAA,OAAO,EAAEY,IAAI,CAACM,GAAL,CAASlB,OAHR;AAIVC,UAAAA,QAAQ,EAAEW,IAAI,CAACG,IAAL,CAAUd,QAJV;AAKVC,UAAAA,WAAW,EAAEU,IAAI,CAACO,OAAL,CAAa,CAAb,EAAgBjB,WALnB;AAMVC,UAAAA,KAAK,EAAE;AANG,SAAd;AAQH,OATG,MASG;AACP,aAAKW,QAAL,CAAc;AACVjB,UAAAA,WAAW,EAAEC,SADH;AAEVC,UAAAA,IAAI,EAAED,SAFI;AAGVE,UAAAA,OAAO,EAAEF,SAHC;AAIVG,UAAAA,QAAQ,EAAEH,SAJA;AAKVI,UAAAA,WAAW,EAAEJ,SALH;AAMVK,UAAAA,KAAK,EAAE;AANG,SAAd;AAQH;AACA,KAnCwC;AAAA;;AAqCzCiB,EAAAA,MAAM,GAAG;AACL,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADF,EAIE;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,UAAU,EAAE,KAAKhB,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,OAAD;AACI,MAAA,WAAW,EAAE,KAAKR,KAAL,CAAWC,WAD5B;AAEI,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWG,IAFrB;AAGI,MAAA,OAAO,EAAE,KAAKH,KAAL,CAAWI,OAHxB;AAII,MAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWK,QAJzB;AAKI,MAAA,WAAW,EAAE,KAAKL,KAAL,CAAWM,WAL5B;AAMI,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWO,KANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAJF,CADJ,CADJ,CADJ,CADN,CADA;AA0BH;;AAhEwC;;AAkExC;AAED,eAAeT,UAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport Titles from \"./Components/titles\";\r\nimport Form from \"./Components/form\";\r\nimport Weather from \"./Components/weather\";\r\n\r\nconst API_KEY = \"d798f5a297dd3b2e788deb6074ca3429\";\r\n\r\n\r\nclass WeatherApp extends React.Component {\r\n    state = {\r\n        temperature: undefined,\r\n        city: undefined,\r\n        country: undefined,\r\n        humidity: undefined,\r\n        description: undefined,\r\n        error: undefined\r\n    }\r\n    getWeather = async (e) => {\r\n        e.preventDefault();\r\n        const city = e.target.elements.city.value;\r\n        const country = e.target.elements.country.value;\r\n        const apiCall = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}`);\r\n        const data = await apiCall.json();\r\n        \r\n        if ( city  && country ) {\r\n        this.setState({\r\n            temperature: data.main.temp,\r\n            city: data.name,\r\n            country: data.sys.country,\r\n            humidity: data.main.humidity,\r\n            description: data.weather[0].description,\r\n            error: \"\"\r\n        });\r\n    } else {\r\n    this.setState({\r\n        temperature: undefined,\r\n        city: undefined,\r\n        country: undefined,\r\n        humidity: undefined,\r\n        description: undefined,\r\n        error: \"Invalid entry.  Please check city and country.\"   \r\n    });\r\n}\r\n}\r\n\r\nrender() {\r\n    return (\r\n    <div>\r\n          <div className=\"wrapper\">\r\n              <div className=\"main\">\r\n                  <div className=\"container\">\r\n                      <div className=\"row\">\r\n                        <div classname=\"sdsdtitle-container\">\r\n                            <Titles />                          \r\n                        </div>\r\n                        <div classname=\".col-xl-7 form-container\">\r\n                            <Form getWeather={this.getWeather}/>   \r\n                            <Weather \r\n                                temperature={this.state.temperature} \r\n                                city={this.state.city} \r\n                                country={this.state.country} \r\n                                humidity={this.state.humidity} \r\n                                description={this.state.description} \r\n                                error={this.state.error}\r\n                            />\r\n                        </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n    </div>\r\n        );\r\n}\r\n\r\n}; \r\n\r\nexport default WeatherApp;"]},"metadata":{},"sourceType":"module"}